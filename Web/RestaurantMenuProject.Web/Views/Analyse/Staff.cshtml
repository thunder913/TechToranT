@model ICollection<StaffAnalyseViewModel>
        <canvas id="ordersChart"></canvas>
        <canvas id="itemsDeliveredChart" width="50" height="25"></canvas>

        @section Scripts{
            <script src="~/lib/chartJS/dist/Chart.js"></script>
            <script>
                function getRGBColor(name) {
                    var hash = 0;
                    if (String.length === 0) return hash;
                    for (var i = 0; i < name.length; i++) {
                        hash = name.charCodeAt(i) + ((hash << 5) - hash);
                        hash = hash & hash;
                    }
                    var rgb = [0, 0, 0];
                    for (var i = 0; i < 3; i++) {
                        var value = (hash >> (i * 8)) & 255;
                        rgb[i] = value;
                    }
                    return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]}, 0.6)`;
                };
            </script>
            <script>
        var ctx = document.getElementById('ordersChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
        });

        var mixedChart = new Chart(ctx, {
            type: 'line',
            data: {
                datasets: [
                    @foreach (var item in Model)
                    {
                        @:{
                        @:label: '@item.FullName',
                        @:data: [@string.Join(",", item.OrdersData.Select(x => x.OrdersCount))],
                        @:borderColor: getRGBColor('@item.Id'),
                        @:fill: false,
                        @:},
                    }
                ],
                labels: [@Html.Raw((string.Join(",", Model.FirstOrDefault().OrdersData.Select(x => "\'" + x.Date + "\'"))))]
            },

            options: {
                responsive: true,
                maintainAspectRatio: true,
                title: {
                    display: true,
                    text: "Waiters orders in the last year",
                    fontSize: 50,
                    position: 'top'
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        },
                    }],
                    xAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Month/Year'
                        }
                    }]
                }
            }
        });
            </script>

            <script>
        var ctx = document.getElementById('itemsDeliveredChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
        });

        var mixedChart = new Chart(ctx, {
            type: 'line',
            data: {
                datasets: [
                    @foreach (var item in Model)
                    {
                        @:{
                        @:label: '@item.FullName',
                        @:data:[@string.Join(",", item.OrdersData.Select(x => x.ItemsDeliveredCount))],
                        @:fill: false,
                        @:    borderColor: getRGBColor('@item.Id'),
                        @:},
                    }
                ],
                labels: [@Html.Raw((string.Join(",", Model.FirstOrDefault().OrdersData.Select(x => "\'" + x.Date + "\'"))))]
            },

            options: {
                title: {
                    display: true,
                    text: "Waiters delivered items last year",
                    fontSize: 50,
                    position: 'top'
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        },
                    }],
                    xAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Month/Year'
                        }
                    }]
                }
            }
        });
            </script>

        }
